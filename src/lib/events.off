
import { BeanstalkSDK } from './BeanstalkSDK';

export class EventProcessor {
  private readonly sdk: BeanstalkSDK;

  constructor(sdk: BeanstalkSDK) {
    this.sdk = sdk;


  }

  async test() {
    // console.log(`testing`);
    // const account = '0xfD459E98FaCCB98838440dB466F01690322A721C';

    // const endBlock = await this.sdk.provider.getBlockNumber();
    // const startBlock = undefined;

    // const results = await this.getQueryFilters(account, startBlock, endBlock);
    // // console.log(results);

    // // const newEvents = flattenDeep<ethers.Event>(results)
    // //   .reduce<Event[]>(this.reduceEvent, [])
    // //   .sort(this.sortEvents); // [0,0,1,1,2]

    // console.log(newEvents)
  }


  getQueryFilters = (account: string, _startBlock: number | undefined, endBlock: number) => {
    const startBlock = _startBlock || DEPLOYMENT_BLOCKS[ChainId.MAINNET].BEANSTALK_GENESIS_BLOCK;
    return Promise.all([

      this.sdk.contracts.beanstalk.queryFilter(this.sdk.contracts.beanstalk.filters.AddDeposit(account), startBlock, endBlock || 'latest'),
    ]);
  };
}
