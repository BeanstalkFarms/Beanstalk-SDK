<<<<<<< HEAD
import { getTestUtils } from "../utils.tests/provider";

const { sdk, account, utils } = getTestUtils();
=======
import { setupConnection } from "../utils/TestUtils/provider";
import { BeanstalkSDK } from "./BeanstalkSDK";

/// Setup
let sdk: BeanstalkSDK;
let account: string;
beforeAll(async () => {
  const { signer, provider, account: _account } = await setupConnection();
  sdk = new BeanstalkSDK({
    provider: provider,
    signer: signer,
    subgraphUrl: "https://graph.node.bean.money/subgraphs/name/beanstalk-testing"
  });
  account = _account;
});
>>>>>>> 2d4c1be (sdk cleanup)

describe("mint function", () => {
  it("uses the right function", async () => {
    expect(true).toBe(true);
    // const typedData = await sdk.root.permit(
    //   [sdk.tokens.BEAN],
    //   [new BigNumber(1000)],
    // );
    // const permit = await sdk.permit.sign(
    //   account,
    //   typedData,
    // )
  });
});
<<<<<<< HEAD

describe("estimateRoots", () => {
  it("test", async () => {
    const estimate = await sdk.root.estimateRoots(sdk.tokens.BEAN, [utils.mockDepositCrate(sdk.tokens.BEAN, 6000, "1000")], true);

    expect(estimate.amount.gt(0)).toBe(true);
  });
});
=======
>>>>>>> 2d4c1be (sdk cleanup)
